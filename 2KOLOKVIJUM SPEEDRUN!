Računarski fakultet
Univerzitet Union

Uvod u programiranje
drugi kolokvijum - grupa 1
2016G1

1. (6 poena) Napisati dve funkcije koje izračunavaju sledeći koren, jedna iterativno a druga
rekurzivno za dato n. U primeru je n=6;

#include <math.h>
#include <stdio.h>

double f1(double n, int i) {
  if (n == 1)
    return sqrt(((i % 2) + 1) / n);
  else
    return sqrt(((i % 2) + 1) / n + f1(n - 1, i + 1));
}

double f1_i(double n) {
  double result = 0;
  int br = 1;
  double i;
  for (i = 1; i <= n; i++) {
    result = sqrt(((br % 2 + 1) / i) + result);
    printf("%d %lf %lf\n", br % 2 + 1, (br % 2 + 1) / i, result);
    br++;
  }
  return result;
}

int main() {
  int n;
  scanf("%d", &n);
  printf("%lf\n", f1(n, n));
  printf("%lf\n", f1_i(n));
  return 0;
}
--------------------------------------------------------------------------------------------------------------------
2. (7 poena). Napisati funkciju koja za uneti broj n pravi matricu kao u primeru za n=45371. Prva
vrsta matrice su cifre broja, svaka sledeća donja vrsta umanjuje broj iz gornje vrste naizmenično za 1
i 2. Prilikom oduzimanja kada se dođe do 0, kreće se opet od 9. Implementirati odgovarajuće ispise
matrice radi testiranja.
4 5 3 7 1
3 4 2 6 0
1 2 0 4 8
0 1 9 3 7
8 9 7 1 6

#include <math.h>
#include <stdio.h>

/**
45371
*/

int numTobr(int n) {
  int count = 0;
  while (n) {
    count++;
    n /= 10;
  }
  return count;
}

void printMatrix(int m, int mat[m][m]) {
  for (int i = 0; i < m; i++) {
    for (int j = 0; j < m; j++) {
      printf("%2d", mat[i][j]);
    }
    printf("\n");
  }
}
void generateMatrix(int m, int mat[m][m]) {
  for (int i = 0; i < m; i++) {
    for (int j = 0; j < m; j++) {
      mat[i][j] = 0;
    }
  }
}

int main() {
  int n;
  scanf("%d", &n);
  int m = numTobr(n);
  int i = 0;
  int mat[m][m];
  generateMatrix(m, mat);

  for (int j = m - 1; j >= 0; j--) {
    mat[i][j] = n % 10;
    n /= 10;
  }

  for (i = 1; i < m; i++) {
    for (int j = 0; j < m; j++) {
      if (i % 2 == 1) {
        mat[i][j] = mat[i - 1][j] - 1;
        if (mat[i - 1][j] - 1 < 0) {
          mat[i][j] = 9;
        }
      }
      if (i % 2 == 0) {
        mat[i][j] = mat[i - 1][j] - 2;
        if (mat[i - 1][j] - 2 < 0) {
          if (mat[i - 1][j] - 2 == -1)
            mat[i][j] = 9;
          if (mat[i - 1][j] - 2 == -2)
            mat[i][j] = 8;
        }
      }
    }
  }

  printMatrix(m, mat);
  return 0;
}
---------------------------------------------------------------------------
3. (7 poena). Napisati program koji menja unetu rečenicu koja se čuva kao string tako što izbacuje
sve reči koje počinju i završavaju se malim slovom. Pretpostavlja se da se unose samo slova i znak
razmaka (space).
Primer: Recenice se Ne pisu ovakO
Rezultat: Recenice Ne ovakO

#include <stdio.h>
#include <string.h>

#define size 100

/**
Recenice se Ne pisu ovakO
Recenice Ne ovakO
*/

int checker(char *str, int start, int end) {
  if (str[start] >= 'a' && str[start] <= 'z' && str[end] >= 'a' &&
      str[end] <= 'z')
    return 0;
  else
    return 1;
}

int main() {
  char str[size] = "";
  fgets(str, size, stdin);
  str[strlen(str) - 1] = ' ';
  int start = 0;
  int end;
  int k = 0;
  for (int i = 0; i < strlen(str); i++) {
    if (str[i] == ' ') {
      end = i - 1;
      if (checker(str, start, end)) {
        for (int i = start; i <= end; i++) {
          str[k++] = str[i];
        }
        str[k++] = ' ';
      }
      start = i + 1;
    }
  }
  str[k] = '\0';
  puts(str);
}
-------------------------------------------------------------------------------------------------------------------
Računarski fakultet
Univerzitet Union

Uvod u programiranje
drugi kolokvijum - grupa 2

1. (6 poena) Napisati dve funkcije koje izračunavaju slededi razlomak jedna iterativno, a druga
rekurzivno za dato n. U primeru je n=6;




