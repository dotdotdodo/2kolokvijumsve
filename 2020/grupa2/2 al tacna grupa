#define SIZE 200
#include <stdio.h>

void reverseArray(int arr[], int n) {
  int start = 0;
  int end = n - 1;
  while (start < end) {
    int temp = arr[start];
    arr[start] = arr[end];
    arr[end] = temp;
    start++;
    end--;
  }
}
int maxparni(int x, int y, int z) {
  int max = 0;
  if (x % 2 == 0) {
    max = x;
  }
  if (y > max && y % 2 == 0) {
    max = y;
  }
  if (z > max && z % 2 == 0) {
    max = z;
  }
  return max;
}

int main() {
  int n, mat[SIZE][SIZE], niz[SIZE];
  int nova[SIZE][SIZE];
  scanf("%d", &n);
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++)
      scanf("%d", &mat[i][j]);
  }
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      if (i == j) {
        niz[i] = mat[i][j];
      }
    }
  }
  reverseArray(niz, n);
  for (int i = n - 1; i >= 0; i--) {
    for (int j = n - 1; j >= 0; j--) {
      if (i + j == n - 1) {
        nova[i][j] = niz[i];
      }
    }
  }
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      if (i + j == n - 1) {
        niz[i] = mat[i][j];
      }
    }
  }
  reverseArray(niz, n);
  for (int i = n - 1; i >= 0; i--) {
    for (int j = n - 1; j >= 0; j--) {
      if (i == j) {
        nova[i][j] = niz[i];
      }
    }
  }
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      if (i + j != n - 1 && i != j) {
        if (j == 0) {
          nova[i][j] = maxparni(mat[i - 1][j], mat[i + 1][j], mat[i][j + 1]);
        } else if (j == n - 1) {
          nova[i][j] = maxparni(mat[i - 1][j], mat[i + 1][j], mat[i][j - 1]);
        } else if (i == 0) {
          nova[i][j] = maxparni(mat[i][j - 1], mat[i + 1][j], mat[i][j + 1]);
        } else if (i == n - 1) {
          nova[i][j] = maxparni(mat[i][j - 1], mat[i - 1][j], mat[i][j + 1]);
        }
      }
    }
  }

  printf("\n\n");
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++)
      printf("%d ", nova[i][j]);
    printf("\n");
  }
  return 0;
}
