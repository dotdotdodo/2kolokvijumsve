1. (12p) Napisati program koji učitava dve kvadratne matrice celih brojeva od kojih je dimenzija prve
matrice stepen nekog prirodnog broja (4,9,16,..), a dimenzija druge jednaka korenu dimenzije prve
matrice i proverava da li u prvoj matrici postoji vrsta i/ili kolona koja sadrži iste elemente kao druga
matrica (zanemariti broj pojavljivanja elemenata). Ispisati redne brojeve vrsta i kolona prve matrice
za koje ovo važi.
Primer:
1. matrica 2. matrica
1 1 9 7 1 9
1 5 9 1 7 9
1 9 7 9
1 15 6 9
Ispis:
vrsta 0
vrsta 2
kolona 3


#include <stdio.h>
#include <math.h>
#define SIZE 20

/**
2
1 1 9 7
1 5 9 1
1 9 7 9
1 15 6 9
1 9
7 9
*/


void spawnMatrica(int n, int mat[n][n])
{
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            scanf("%d",&mat[i][j]);
        }
    }
}

int digitRemover(int br, int digit)
{
    int novi=0;
    int puta=1;
    while(br)
    {
        int check=br%10;
        if(check!=digit)
        {
            novi=novi+puta*check;
            puta*=10;
        }

        br/=10;
    }
    return novi;
}

int main()
{

    int n;
    scanf("%d",&n);

    int prva=n*n;
    int druga=sqrt(prva);
    int mat[prva][prva];
    int koren[druga][druga];
    spawnMatrica(prva,mat);
    spawnMatrica(druga,koren);

    int br=0;
    int puta=1;
    for(int i=0;i<druga;i++){
        for(int j=0;j<druga;j++){
            br=br+koren[i][j]*puta;
            puta*=10;
        }
    }

    int cache=br;
    for(int i=0;i<n*n;i++){
            br=cache;
        for(int j=0;j<n*n;j++){
            br=digitRemover(br,mat[i][j]);
            if(br==0)
            {
             printf("vrsta %d\n",i);
             break;
            }
        }
    }
    br=cache;
    for(int j=0;j<n*n;j++){
            br=cache;
        for(int i=0;i<n*n;i++){
            br=digitRemover(br,mat[i][j]);
            if(br==0)
            {
                printf("kolona %d\n",j);
                break;
            }
        }
    }

return 0;
}
